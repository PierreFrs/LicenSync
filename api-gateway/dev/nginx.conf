events {}

http {
    upstream backend_service {
        server licensync-backend-1:8080;
    }

    upstream event_logger_service {
        server event-logger-service:3001;
    }

    server {
        listen 80;

        location /backend/ {
            proxy_pass http://backend_service/;

            # Set maximum allowed size of client request body
            client_max_body_size 20M;

            # CORS headers
            add_header 'Access-Control-Allow-Origin' 'http://localhost:4200';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept';

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'http://localhost:4200';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept';
                return 204;
            }
        }

        location /event-logger/ {
            proxy_pass http://event_logger_service/;

            # CORS headers for preflight and main request
            add_header 'Access-Control-Allow-Origin' 'licensync-backend-1:8080';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept';

            # Handling OPTIONS method
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'licensync-backend-1:8080';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept';
                return 204;
            }
        }

        location / {
            proxy_pass http://localhost:4200;
        }
    }
}